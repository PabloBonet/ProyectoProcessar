PARAMETERS CAMINO, BASEDATO, SEP1, SEP2
** RECIBE COMO PARAMETRO EL PATH DE LA BASE DE DATOS
** EL NOMBRE DE LA BASE DE DATOS
** LA SEPARACION PARA EL ESPACIO ENTRE EL NOMBRE DEL CAMPO Y EL TIPO
** LA SEPARACION PARA EL INDICE Y EL TAG
	SET SAFETY OFF 
	SET CENTURY ON 
	SET DATE TO DMY 
	SET DEFAULT TO &CAMINO
	ARCHI = CAMINO+"\"+ALLTRIM(BASEDATO)+".FOX"
	DELETE FILE &ARCHI
	ARCHI = CAMINO+"\"+ALLTRIM(BASEDATO)+".MyS"
	DELETE FILE &ARCHI


***CREA BASE PARA VISUAL FOXPRO
***********************************************
IFOR = 0
FOR IFOR = 1 TO 2 

	ARCHI = CAMINO+"\TMPTABLAS.DBF"
	IF FILE(ARCHI) THEN
		IF USED("TMPTABLAS") THEN
			SELECT TMPTABLAS
			USE
		ENDIF
		DELETE FILE &CAMINO\TMPTABLAS.DBF
		DELETE FILE &CAMINO\TMPTABLAS.CDX
	ENDIF
	CREATE DBF &CAMINO\TMPTABLAS FREE (NTABLA C(80), N2TABLA C(50))
	
IF UPPER(SUBSTR(ALLTRIM(BASEDATO),LEN(ALLTRIM(BASEDATO))-2,3)) == "DBC" THEN 
	ARBO = CAMINO+"\"+BASEDATO
	OPEN DATABASE &ARBO
	DISPLAY TABLES TO FILE &CAMINO\LASTABLAS.TXT NOCONSOLE 
	SELECT TMPTABLAS
	APPEND FROM &CAMINO\LASTABLAS.TXT SDF
	SELECT TMPTABLAS
	REPLACE ALL NTABLA WITH ALLTRIM(NTABLA)
	GO 4
	DO WHILE !EOF()
		FOR I = 1 TO 80
			IF SUBSTR(NTABLA,I,1)=" " THEN 
				EXIT
			ENDIF 
		ENDFOR 
		REPLACE N2TABLA WITH SUBSTR(NTABLA,1,I)
		SKIP
	ENDDO
	SELECT tmptablas   
	INDEX ON ALLTRIM(N2TABLA) TAG N2TABLA 
	
	GO top
	SKIP 3
	DO WHILE !EOF()
		ARCHIVO = CAMINO+"\"+ALLTRIM(N2TABLA)
		USE &ARCHIVO IN 0
		ARCHIVO = ALLTRIM(N2TABLA)
		SELECT &ARCHIVO
		COPY STRUCTURE EXTENDED TO &CAMINO\ESTRUCTU
		USE &CAMINO\ESTRUCTU IN 0 
		SELECT ESTRUCTU

		IF IFOR = 1 THEN 
			=ESTRUFOX()
		ELSE
			=ESTRUPOS()
		ENDIF 
		
		SELECT ESTRUCTU
		USE
		SELECT TMPTABLAS
		SKIP
	ENDDO
	CLOSE TABLES ALL 
	DELETE FILE &CAMINO\ESTRUCTU.FPT
	DELETE FILE &CAMINO\ESTRUCTU.DBF
	DELETE FILE &CAMINO\LASTABLAS.TXT
	DELETE FILE &CAMINO\TMPTABLAS.DBF
	DELETE FILE &CAMINO\TMPTABLAS.CDX
ELSE
	SELECT TMPTABLAS
	APPEND BLANK 
	REPLACE N2TABLA WITH SUBSTR(ALLTRIM(BASEDATO),1,LEN(ALLTRIM(BASEDATO))-4)
	DO WHILE !EOF()
		ARCHIVO = CAMINO+"\"+ALLTRIM(N2TABLA)
		USE &ARCHIVO IN 0
		ARCHIVO = ALLTRIM(N2TABLA)
		SELECT &ARCHIVO
		COPY STRUCTURE EXTENDED TO &CAMINO\ESTRUCTU
		USE &CAMINO\ESTRUCTU IN 0 
		SELECT ESTRUCTU

		IF IFOR = 1 THEN 
			=ESTRUFOX()
		ELSE
			=ESTRUPOS()
		ENDIF 
		
		SELECT ESTRUCTU
		USE
		SELECT TMPTABLAS
		SKIP
	ENDDO
	CLOSE TABLES ALL 
	DELETE FILE &CAMINO\ESTRUCTU.FPT
	DELETE FILE &CAMINO\ESTRUCTU.DBF
	DELETE FILE &CAMINO\TMPTABLAS.DBF
	DELETE FILE &CAMINO\TMPTABLAS.CDX
ENDIF

ENDFOR 



FUNCTION ESTRUPOS
	ARVO = CAMINO+"\"+ALLTRIM(BASEDATO)+".SQL"
	IF FILE(ARVO)  && ¿Existe el archivo?
		PUNTERO = FOPEN(ARVO,12)  && Si existe, abrir para lectura-escritura
	ELSE
		PUNTERO = FCREATE(ARVO)  && Si no, crearlo
*		RENGLON = "*ARCHIVO CREADO  : "+TTOC(DATETIME())
*		=FPUTS(PUNTERO, RENGLON )
		=FPUTS(PUNTERO, CHR(13))
	ENDIF
	IF PUNTERO < 0  && Comprobar si hay error al abrir el archivo
		RETURN .F.
	ELSE  && Si no hay error, escribir en archivo
		=FSEEK(PUNTERO,0,2)
		
*		RENGLON = "*TABLA : "+UPPER(ALLTRIM(TMPTABLAS.N2TABLA))+".DBF"
*		=FPUTS(PUNTERO, RENGLON )
		=FPUTS(PUNTERO, CHR(13))
		RENGLON = "CREATE TABLE "+UPPER(ALLTRIM(TMPTABLAS.N2TABLA))+" ( "
		=FPUTS(PUNTERO, RENGLON )
		
		SELECT ESTRUCTU
		GO TOP
		ultimo = RECCOUNT()
		DO WHILE !EOF()
			IF ultimo = RECNO() THEN 
				ultiparte = " NOT NULL , "
			ELSE
				ultiparte = " NOT NULL , "
			ENDIF 
			DO CASE
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "C"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  CHAR("+ALLTRIM(STR(FIELD_LEN))+")"+(ultiparte)&&, ;" && ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "N"
					IF ESTRUCTU.FIELD_DEC > 0 THEN 
*						RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  FLOAT("+ALLTRIM(STR(FIELD_LEN))+","+ALLTRIM(STR(FIELD_DEC))+")"+(ultiparte) &&, ;" &&, ;"+CHR(13)
						RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  FLOAT "+(ultiparte) &&, ;" &&, ;"+CHR(13)
					ELSE
						RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  INTEGER"+(ultiparte) &&, ;" &&, ;"+CHR(13)
					ENDIF 
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) =  "Y"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  FLOAT "+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) =  "D"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  date"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) =  "T"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  DATETIME "+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "L"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  bool"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "M"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  varchar"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "I"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  INTEGER "+(ultiparte) &&,;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "G"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  G"+(ultiparte) &&,;" &&, ;"+CHR(13)
				OTHERWISE 
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+" ¿¿¿VERIFICAR TIPO ??? , ;" &&;"+CHR(13)
			ENDCASE

			=FPUTS(PUNTERO, RENGLON )
			SELECT ESTRUCTU
			SKIP
		ENDDO 
*		RENGLON = "                     )" 
*		=FPUTS(PUNTERO, RENGLON )
*		=FPUTS(PUNTERO, CHR(13))

		ARBO = ALLTRIM(TMPTABLAS.N2TABLA)
		SELECT &ARBO
		GO TOP
		IF !EOF() THEN 
			FOR I = 1 TO 50 
				IF EMPTY(TAG(I)) THEN 
					EXIT
				ENDIF 
	*			RENGLON = "INDEX ON "+ALLTRIM(SYS(14,I))+SPACE(SEP2-LEN(ALLTRIM(SYS(14,I))))+" TAG "+ALLTRIM(TAG(I))

	*			RENGLON = SPACE(13)+"INDEX "+ALLTRIM(TAG(I))+" ("+ALLTRIM(SYS(14,I))+SPACE(SEP2-LEN(ALLTRIM(SYS(14,I))))+"), "
				RENGLON = SPACE(13)+"INDEX "+ALLTRIM(TAG(I))+" ("+ALLTRIM(SYS(14,I))+"), "
				=FPUTS(PUNTERO, RENGLON )
			ENDFOR 
		ENDIF 		
		=FPUTS(PUNTERO, CHR(13))
		=FPUTS(PUNTERO, ") ;")
		=FPUTS(PUNTERO, " ")
		=FPUTS(PUNTERO, " ")
	ENDIF
	=FCLOSE(PUNTERO)  && Cerrar archivo
*	CLOSE ALL 


**** EN MYSQL CORRER DESDE LA LINEA DE COMANDO SHELL REVISAR ANTES EL ARCHIVO.
****		mysql -h 127.0.0.1 -u root -D basedato < archivo.sql

RETURN 




FUNCTION ESTRUFOX


	ARVO = CAMINO+"\"+ALLTRIM(BASEDATO)+".FOX"
	IF FILE(ARVO)  && ¿Existe el archivo?
		PUNTERO = FOPEN(ARVO,12)  && Si existe, abrir para lectura-escritura
	ELSE
		PUNTERO = FCREATE(ARVO)  && Si no, crearlo
		RENGLON = "*ARCHIVO CREADO  : "+TTOC(DATETIME())
		=FPUTS(PUNTERO, RENGLON )
		=FPUTS(PUNTERO, CHR(13))
	ENDIF
	IF PUNTERO < 0  && Comprobar si hay error al abrir el archivo
		RETURN .F.
	ELSE  && Si no hay error, escribir en archivo
		=FSEEK(PUNTERO,0,2)
		
		RENGLON = "*TABLA : "+UPPER(ALLTRIM(TMPTABLAS.N2TABLA))+".DBF"
		=FPUTS(PUNTERO, RENGLON )
		=FPUTS(PUNTERO, CHR(13))
		RENGLON = "CREATE TABLE "+UPPER(ALLTRIM(TMPTABLAS.N2TABLA))+" ( ;"
		=FPUTS(PUNTERO, RENGLON )
		
		SELECT ESTRUCTU
		GO TOP
		ultimo = RECCOUNT()
		DO WHILE !EOF()
			IF ultimo = RECNO() THEN 
				ultiparte = " )"
			ELSE
				ultiparte = ", ;"
			ENDIF 
			DO CASE
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "C"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  C("+ALLTRIM(STR(FIELD_LEN))+")"+(ultiparte)&&, ;" && ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "N"
					IF ESTRUCTU.FIELD_DEC > 0 THEN 
						RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  N("+ALLTRIM(STR(FIELD_LEN))+","+ALLTRIM(STR(FIELD_DEC))+")"+(ultiparte) &&, ;" &&, ;"+CHR(13)
					ELSE
						RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  N("+ALLTRIM(STR(FIELD_LEN))+")"+(ultiparte) &&, ;" &&, ;"+CHR(13)
					ENDIF 
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) =  "Y"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  Y"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) =  "D"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  D"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) =  "T"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  T"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "L"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  L"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "M"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  M"+(ultiparte) &&, ;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "I"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  I"+(ultiparte) &&,;" &&, ;"+CHR(13)
				CASE ALLTRIM(ESTRUCTU.FIELD_TYPE) = "G"
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+"  G"+(ultiparte) &&,;" &&, ;"+CHR(13)
				OTHERWISE 
					RENGLON = SPACE(13)+UPPER(ALLTRIM(FIELD_NAME))+SPACE(SEP1-LEN(ALLTRIM(FIELD_NAME)))+" ¿¿¿VERIFICAR TIPO ??? , ;" &&;"+CHR(13)
			ENDCASE

			=FPUTS(PUNTERO, RENGLON )
			SELECT ESTRUCTU
			SKIP
		ENDDO 
*		RENGLON = "                     )" 
*		=FPUTS(PUNTERO, RENGLON )
		=FPUTS(PUNTERO, CHR(13))

		ARBO = ALLTRIM(TMPTABLAS.N2TABLA)
		SELECT &ARBO
		GO TOP
		IF !EOF() THEN 
			FOR I = 1 TO 50 
				IF EMPTY(TAG(I)) THEN 
					EXIT
				ENDIF 
				RENGLON = "INDEX ON "+ALLTRIM(SYS(14,I))+SPACE(SEP2-LEN(ALLTRIM(SYS(14,I))))+" TAG "+ALLTRIM(TAG(I))
				=FPUTS(PUNTERO, RENGLON )
			ENDFOR 
		ENDIF
		=FPUTS(PUNTERO, CHR(13))
		=FPUTS(PUNTERO, "*************************************************************************")
		=FPUTS(PUNTERO, "*************************************************************************")
	ENDIF
	=FCLOSE(PUNTERO)  && Cerrar archivo
RETURN 



