*********************************************************************
***
*** PROGRAMA PARA ALMACENAR LAS FUNCIONES DEL MÓDULO DE COBRANZA
***
*********************************************************************


*/------------------------------------------------------------------------------------------------------------
*/ 	Importación de comprobantes desde archivo de intercambio (Archivo de envio .ENV)
** 	Funcion: ImportarComprobantes 
* 	Parametros: 
*		P_idcbasociada: ID de la entidad asociada (Emisor del archivo de envio .ENV)
*		p_archivo: Path completo con el nombre del archivo .ENV
*	Retorno: Retorna 1 si se importó correctamente, 0 en otro caso
*/------------------------------------------------------------------------------------------------------------

FUNCTION ImportarComprobantes
	PARAMETERS p_idcbasociada, p_archivo,p_tablaComprobantes

		IF TYPE('p_idcbasociada') != 'N'
			=messagebox("El ID de la entidad asociada no es válido",16,"Error al Importar comprobantes")
		ENDIF 

		p_archivo = alltrim(p_archivo)
		
		IF !file(p_archivo) THEN
			=messagebox("El Archivo: "+p_archivo+" No se Encuentra,"+CHR(13)+" o la Ruta de Acceso no es Válida",16,"Error al Importar comprobantes")
			RETURN 0
		ENDIF
		
		IF EMPTY(ALLTRIM(p_tablaComprobantes)) = .T.
			MESSAGEBOX("Nombre de tabla temporal incorrecta",0+16+0,"Error al Importar comprobantes")
			RETURN 0
		ENDIF 


		** Controlar que el archivo sea de la entidad asociada **
		v_nombreArchivo = ALLTRIM(JUSTSTEM(p_archivo))
		v_extension = ALLTRIM(UPPER(JUSTEXT(p_archivo)))
		
		IF v_extension != 'ENV'
			=messagebox("El Archivo: "+p_archivo+" Tiene una extensión incorrecta, la extensión debe ser .ENV ",16,"Error al Importar comprobantes")
			RETURN 0
		ENDIF 

			
		vconeccionF=abreycierracon(0,_SYSSCHEMA)	
		
		** Busco los datos de la entidad asociada pasada como parámetro **
		sqlmatriz(1)= " select * from cbasociadas where idcbasoci = " +ALLTRIM(STR(p_idcbasociada))
		
		verror=sqlrun(vconeccionF,"cbasociada_sql")
			IF verror=.f.  
			    MESSAGEBOX("Ha Ocurrido un Error al obtener los datos de la entidad asociada ",0+48+0,"Error al Importar comprobantes")
			    RETURN 0
			ENDIF	
			
		SELECT cbasociada_sql
		GO TOP 
		
		IF NOT EOF()
			v_nombArchivoEnv = ALLTRIM(cbasociada_sql.narchivoe)
			v_ultSecEnv	= cbasociada_sql.esecuencia
			
			v_longArcEnv = LEN(v_nombArchivoEnv)
			
			** Compruebo el nombre del archivo **
			v_entArc = SUBSTR(v_nombreArchivo,1,v_longArcEnv)
			v_secArc = SUBSTR(v_nombreArchivo,v_longArcEnv+1)
			
			IF ALLTRIM(v_entArc) != ALLTRIM(v_nombArchivoEnv)
				MESSAGEBOX("El nombre del archivo no se corresponde con la entidad",0+48+0,"Error al Importar comprobantes")
			    RETURN 0	
			ENDIF 
						
			IF v_ultSecEnv >= VAL(v_secArc)
				MESSAGEBOX("El número de secuencia del archivo es menor o igual al úlimo ingresado",0+48+0,"Error al Importar comprobantes")
			    RETURN 0	
			ENDIF 
		ELSE
			MESSAGEBOX("No se encuentran los datos de la entidada asociada",0+48+0,"Error al Importar comprobantes")
			RETURN 0
		ENDIF 
			
		v_punteroArcEnv = FOPEN(p_archivo) && Puntero del arhivo
		
		IF v_punteroArcEnv < 0		
			MESSAGEBOX("No se puede abrir el archivo de Envio",0+48+0,"Error al Importar comprobantes")
			RETURN 0
		ENDIF 
		
		** Obtengo información de ubicación de campos en el registro del archivo de envio **
		SELECT cbasociada_sql
		GO TOP 
	
		v_empresaid		= ALLTRIM(cbasociada_sql.empresaid)
		v_elong 		= ALLTRIM(cbasociada_sql.elong)
		v_eempresaid  	= ALLTRIM(cbasociada_sql.eempresaid)
		v_eesecuencia 	= ALLTRIM(cbasociada_sql.eesecuencia)
		v_eperiodo 		= ALLTRIM(cbasociada_sql.eperiodo)
		v_ebc			= ALLTRIM(cbasociada_sql.ebc)
		v_ebceid 		= ALLTRIM(cbasociada_sql.ebceid)
		v_ebcsid		= ALLTRIM(cbasociada_sql.ebcsid)
		v_ebcidcomp 	= ALLTRIM(cbasociada_sql.ebcidcomp)
		v_ebctotal1 	= ALLTRIM(cbasociada_sql.ebctotal1)
		v_ebcvence1 	= ALLTRIM(cbasociada_sql.ebcvence1)
		v_ebctotal2 	= ALLTRIM(cbasociada_sql.ebctotal2)
		v_ebcvence2		= ALLTRIM(cbasociada_sql.ebcvence2)
		v_ebctotal3 	= ALLTRIM(cbasociada_sql.ebctotal3)
		v_ebcvence3 	= ALLTRIM(cbasociada_sql.ebcvence3)
				
		v_sentenciaCrea = "create table "+ALLTRIM(p_tablaComprobantes)+ " (ident I, narchivo C(100), lote I, eperiodo C(20), esecuencia C(10), comproba C(100),idcomp I, total1 Y, vence1 C(8),total2 Y, vence2 C(8), total3 Y, vence3 C(8), bc C(254))"
		&v_sentenciaCrea
	
		** Recorro el archivo de envio, linea por linea **	
		DO WHILE !FEOF(v_punteroArcEnv) && Finaliza cuando encuentra una linea vacia
				v_linea = ALLTRIM(FGETS(v_punteroArcEnv))
			
				IF EMPTY(v_linea) = .F.
					v_tamLinea = LEN(v_linea)
															
					ALINES(v_longitud,v_elong,'-')
								
					v_tamCodigo = (VAL(v_longitud(2))) - (VAL(v_longitud(1))) + 1 
					
					IF v_tamCodigo > v_tamLinea && COMPRUEBO LONGITUD DEL CODIGO
					
						MESSAGEBOX("Codigo erroneo. La longitud del codigo ("+ALLTRIM(STR(v_tamCodigo))+") es mayor al del registro en el archivo ("+ALLTRIM(STR(v_tamlinea))+")")
						RETURN 0
						&& CODIGO ERRONEO
					ELSE
						&& CODIGO CORRECTO
												
						** Código Empresa/Ente **
						ALINES(ARR_eempresaid,v_eempresaid,'-')
						COD_eempresaid = SUBSTR(v_linea,VAL(ARR_eempresaid(1)),VAL(ARR_eempresaid(2)))
						
						** Código de secuencia de envío **
						ALINES(ARR_eesecuencia,v_eesecuencia,'-')
						COD_eesecuencia = SUBSTR(v_linea,VAL(ARR_eesecuencia(1)),VAL(ARR_eesecuencia(2)))
						
						IF ALLTRIM(v_empresaid) == ALLTRIM(COD_eempresaid) AND ALLTRIM(v_secArc) == ALLTRIM(COD_eesecuencia) 
							
							** Período de Facturación **
							ALINES(ARR_eperiodo,v_eperiodo,'-')
							COD_eperiodo = SUBSTR(v_linea,VAL(ARR_eperiodo(1)),VAL(ARR_eperiodo(2)))

							** Código de Barra Completo **
							ALINES(ARR_ebc,v_ebc,'-')
							COD_ebc = SUBSTR(v_linea,VAL(ARR_ebc(1)),VAL(ARR_ebc(2)))

							** Código de Entidad (en código de barra) **
							ALINES(ARR_ebceid,v_ebceid,'-')
							COD_ebceid = SUBSTR(v_linea,VAL(ARR_ebceid(1)),VAL(ARR_ebceid(2)))

							** Subcódigo de Entidad (en código de barra) **
							ALINES(ARR_ebcsid,v_ebcsid,'-')
							COD_ebcsid = SUBSTR(v_linea,VAL(ARR_ebcsid(1)),VAL(ARR_ebcsid(2)))
						
							** Código del comprobante (en código de barra) **
							ALINES(ARR_ebcidcomp,v_ebcidcomp,'-')
							COD_ebcidcomp = SUBSTR(v_linea,VAL(ARR_ebcidcomp(1)),VAL(ARR_ebcidcomp(2)))
							
							** Convierto el idcomprobante a numero **
							NUM_ebcidcomp = VAL(COD_ebcidcomp)
							** Fecha del primer vencimiento (en código de barra) **
							ALINES(ARR_ebcvence1,v_ebcvence1,'-')
							COD_ebcvence1 = SUBSTR(v_linea,VAL(ARR_ebcvence1(1)),VAL(ARR_ebcvence1(2)))
							
							** Importe del primer vencimiento (en código de barra) **
							ALINES(ARR_ebctotal1,v_ebctotal1,'-')
							COD_ebctotal1 = SUBSTR(v_linea,VAL(ARR_ebctotal1(1)),VAL(ARR_ebctotal1(2)))
														
							** Convierto COD_ebctotal1 a float **
							v_NUM_entt1 = VAL(COD_ebctotal1)
							NUM_ebctotal1 = (v_NUM_entt1/100)
							
							** Fecha del segundo vencimiento (en código de barra) **
							ALINES(ARR_ebcvence2,v_ebcvence2,'-')
							COD_ebcvence2 = SUBSTR(v_linea,VAL(ARR_ebcvence2(1)),VAL(ARR_ebcvence2(2)))
							
							** Importe del segundo vencimiento (en código de barra) **
							ALINES(ARR_ebctotal2,v_ebctotal2,'-')
							COD_ebctotal2 = SUBSTR(v_linea,VAL(ARR_ebctotal2(1)),VAL(ARR_ebctotal2(2)))
							
							** Convierto COD_ebctotal1 a float **
							v_NUM_entt2 = VAL(COD_ebctotal2)
							NUM_ebctotal2 = (v_NUM_entt2/100)
							
							** Fecha del tercer vencimiento (en código de barra) **
							ALINES(ARR_ebcvence3,v_ebcvence3,'-')
							COD_ebcvence3 = SUBSTR(v_linea,VAL(ARR_ebcvence3(1)),VAL(ARR_ebcvence3(2)))
							
							** Importe del tercer vencimiento (en código de barra) **
							ALINES(ARR_ebctotal3,v_ebctotal3,'-')
							COD_ebctotal3 = SUBSTR(v_linea,VAL(ARR_ebctotal3(1)),VAL(ARR_ebctotal3(2)))
							
							** Convierto COD_ebctotal1 a float **
							v_NUM_entt3 = VAL(COD_ebctotal3)
							NUM_ebctotal3 = (v_NUM_entt3/100)
							
							
							v_lote = 0
							v_comprobante = ""
																									
							v_sentenciaIns1 = " insert into "+ALLTRIM(p_tablaComprobantes)+ " (ident, narchivo, lote, eperiodo, esecuencia, comproba,idcomp, total1, vence1,total2, vence2, total3, vence3, bc) "
							v_sentenciaIns2 = " values ("+ALLTRIM(STR(p_idcbasociada))+",'"+ALLTRIM(v_nombArchivoEnv)+"',"+ALLTRIM(STR(v_lote))+",'"+ALLTRIM(COD_eperiodo)+"','"+ALLTRIM(COD_eesecuencia)+"','"+ALLTRIM(v_comprobante)+"',"+ALLTRIM(STR(NUM_ebcidcomp))+","
							v_sentenciaIns3 = ALLTRIM(STR(NUM_ebctotal1,13,2))+",'"+ALLTRIM(COD_ebcvence1)+"',"+ALLTRIM(STR(NUM_ebctotal2,13,2))+",'"+ALLTRIM(COD_ebcvence2)+"',"+ALLTRIM(STR(NUM_ebctotal3,13,2))+",'"+ALLTRIM(COD_ebcvence3)+"','"+alltrim(COD_ebc)+"')"
							

							v_sentenciaIns = v_sentenciaIns1+v_sentenciaIns2+v_sentenciaIns3
							
							&v_sentenciaIns
				
							
						ELSE
							** Código de empresa y secuencia no coincide con el codigo de la empresa y secuencia pasado en el registro del archivo **
					
						ENDIF 
										
					ENDIF 
				ENDIF 

			SKIP 1	
		ENDDO 
		FCLOSE(v_punteroArcEnv)
	RETURN 1

ENDFUNC  